[{"C:\\Users\\jochi\\blend_the_colors\\src\\index.js":"1","C:\\Users\\jochi\\blend_the_colors\\src\\App.js":"2","C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js":"3","C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js":"4","C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js":"5","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js":"6","C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js":"7","C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js":"8","C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js":"9","C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js":"10","C:\\Users\\jochi\\blend_the_colors\\src\\Tutorial.js":"11","C:\\Users\\jochi\\blend_the_colors\\src\\MakeAGuessHandle.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":2943,"mtime":1610374666415,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":6202,"mtime":1610369814066,"results":"17","hashOfConfig":"14"},{"size":713,"mtime":1609776810433,"results":"18","hashOfConfig":"14"},{"size":8150,"mtime":1610372631920,"results":"19","hashOfConfig":"14"},{"size":3244,"mtime":1610372064348,"results":"20","hashOfConfig":"14"},{"size":880,"mtime":1610372064367,"results":"21","hashOfConfig":"14"},{"size":4297,"mtime":1610373439768,"results":"22","hashOfConfig":"14"},{"size":3220,"mtime":1610376823777,"results":"23","hashOfConfig":"14"},{"size":2866,"mtime":1610155665455,"results":"24","hashOfConfig":"14"},{"size":4625,"mtime":1610370051048,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jpmznh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\jochi\\blend_the_colors\\src\\index.js",[],["56","57"],"C:\\Users\\jochi\\blend_the_colors\\src\\App.js",["58","59"],"import './App.css';\nimport * as React from \"react\";\nimport {NormalMode} from \"./NormalMod\";\nimport {ReverseMode} from \"./ReverseMode\";\nimport firebase from \"firebase\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {SignOut} from './Scoreboard';\nimport {AccueilPage, EnterName} from \"./AccueilPage\";\nimport {useEffect, useState} from \"react\";\nimport {TutorialN, TutorialR} from \"./Tutorial\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport {transitions, positions, Provider as AlertProvider, useAlert} from 'react-alert'\n\nconst firestore = firebase.firestore();\nconst auth = firebase.auth();\n\nfunction App(){\n// optional configuration\n    const options = {\n        // you can also just use 'bottom center'\n        position: positions.BOTTOM_CENTER,\n        timeout: 5000,\n        offset: '30px',\n        // you can also just use 'scale'\n        transition: transitions.SCALE\n    }\n\n    return(\n        <AlertProvider template={AlertTemplate} {...options}>\n            <App2 />\n        </AlertProvider>\n    )\n\n}\n\n\nfunction App2() {\n    const alert = useAlert();\n\n    const [normalmode,setmode] = React.useState(true);\n    const [user] = useAuthState(auth);\n    useEffect(()=>{\n        alert.success(\"CONNECTED\");\n    },user);\n\n    let id;\n    if(user)id=user.uid;\n    const handleClick = () => {\n        setmode(prevState => {return(!prevState)})\n    };\n    const [name_exist, setNameExist] = useState(false);\n    const Handle = () => {firestore.collection('users').doc(user.uid).get().then((doc) => {\n        const addd = () => {\n            firestore.collection('users').doc(user.uid).set({name:\"\",\n                bestScoreN:0,bestScoreR:0\n            });\n        };\n        addd();\n    });};\n    try{\n        const getCA = () => {firestore.collection('users').doc(user.uid).get().then((doc) => {\n            if (!doc.exists){\n                Handle();\n                setNameExist(false);\n            }else{\n                setNameExist(doc.data()['name'] !== \"\");\n            }\n        });};\n        getCA();\n\n    }catch (e){\n        //pass\n    }\n    let page_principal = user && name_exist;\n    let enter_name =  user && !name_exist;\n    return(\n        <>\n\n            {user ? <SignOut mode={normalmode} /> : <AccueilPage/>}\n            {enter_name ? <EnterName/> : null}\n            <button className={normalmode.toString()} id='changeMode'  onClick={handleClick}>CHANGE MODE</button>\n            <PagePrincipal page_principal={page_principal} id={id} normalmode={normalmode}/>\n        </>\n    );\n}\nfunction PagePrincipal(props){\n    let page_principal = props.page_principal;\n    let id = props.id;\n    let normalmode = props.normalmode;\n\n    if(page_principal){\n        return(<>\n\n            {normalmode ? <NormalMode  id={id} /> : <ReverseMode id={id} />}\n            {normalmode ? <TutorialN/> : <TutorialR/>}\n\n            </>\n        )\n    }else{\n        return null\n    }\n\n\n}\nexport default App;\n","C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js",["60"],"export function hslToRgb(h, s, l){\r\n    let r, g, b;\r\n    h=h/360;\r\n    s=s/100;\r\n    l=l/100;\r\n\r\n    if(s == 0){\r\n        r = g = b = l; // achromatic\r\n    }else{\r\n        let hue2rgb = function hue2rgb(p, q, t){\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n    return 'rgba('+r*255+','+g*255+','+b*255+',1)'}\r\n\r\n","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js",["61","62"],"import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { Button, ListGroup, Overlay} from \"react-bootstrap\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport * as React from \"react\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyC_q_AoIfegqVsC_aSwUPhHTCHGN3uhcC8\",\r\n    authDomain: \"blendthecolors-df341.firebaseapp.com\",\r\n    databaseURL: \"https://blendthecolors-df341-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"blendthecolors-df341\",\r\n    storageBucket: \"blendthecolors-df341.appspot.com\",\r\n    messagingSenderId: \"732334047092\",\r\n    appId: \"1:732334047092:web:8c3ba8cf38b74fb4823621\",\r\n    measurementId: \"G-D4Q7140CK5\"\r\n})\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nexport function SignIn() {\r\n\r\n\r\n    const SignInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n\r\n\r\n    }\r\n    const SignInWithFb = () => {\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <button className=\"sign-in t\" onClick={SignInWithGoogle}>Sign in with google</button>\r\n            <button className=\"sign-in\" onClick={SignInWithFb}>Sign in with facebook</button>\r\n        </>\r\n    );\r\n}\r\nexport function SignOut(props) {\r\n    return auth.currentUser && (\r\n        <button  className={\"sign-out\"+props.mode}  onClick={() => auth.signOut()}>SIGN OUT</button>\r\n\r\n    )\r\n}\r\n\r\nexport function ScoreBoard(props){\r\n    let mode = props.mode;\r\n    let id = props.id;\r\n\r\n    const userRef = firestore.collection('users');\r\n    const [att,setAtt]=useState([0,0,\"ss\"]);\r\n\r\n    useEffect(() => {\r\n        firestore.collection('users').doc(id).get().then((doc) => {\r\n            setAtt([\r\n                doc.data()['bestScoreR'],\r\n                doc.data()['bestScoreN'],\r\n                doc.data()['name']\r\n            ])\r\n        });\r\n    },id\r\n    )\r\n\r\n    let query;\r\n    let query2;\r\n\r\n    if (mode){\r\n        query = userRef.orderBy('bestScoreN', 'desc').limit(10);\r\n        query2 = userRef.where(\"bestScoreN\", \">\", att[1]);\r\n    }else{\r\n        query = userRef.orderBy('bestScoreR', 'desc').limit(10);\r\n        query2 = userRef.where(\"bestScoreR\", \">\", att[0]);\r\n    }\r\n\r\n    const [bestScores] = useCollectionData(query, { idField: 'id' });\r\n    const [onTop] = useCollectionData(query2);\r\n    let place;\r\n    try{\r\n        place = onTop.length;\r\n    }catch (e){\r\n        //pass\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const target = useRef(null);\r\n\r\n    return(\r\n\r\n    <div  id='scoardboard' >\r\n        <Button id={'sc-btn'+mode} ref={target} onClick={() => setShow(!show)}>\r\n            SCOREBOARD\r\n        </Button>\r\n        <Overlay id='sc-ovl' target={target.current} show={show} placement=\"bottom\">\r\n            {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n\r\n                    }}\r\n                >\r\n                    <ListGroup id='listgroup' >\r\n                        {bestScores && bestScores.map((ele,index) => <Scores i={index} mode={mode} key={ele.id} bestScores={ele} />)}\r\n                        {mode ? <ListGroup.Item  className='u' id='list-items2'><p>#{place+1}</p><p>{att[2]}</p>  <p>{att[1]}%</p></ListGroup.Item> :  <ListGroup.Item className='u' id='list-items'><p>#{place+1}</p><p>{att[2]}</p>  <p>{att[0]}%</p></ListGroup.Item>}\r\n                    </ListGroup>\r\n                </div>\r\n            )}\r\n        </Overlay>\r\n\r\n    </div>\r\n    );\r\n\r\n\r\n\r\n}\r\nfunction Scores (props) {\r\n    const { name, bestScoreN, bestScoreR } = props.bestScores;\r\n    const mode = props.mode;\r\n    const i = props.i+1;\r\n    if(mode){\r\n        return (\r\n            <ListGroup.Item  id='list-items2'><p>#{i}</p><p>{name}</p>  <p>{bestScoreN}%</p></ListGroup.Item>\r\n\r\n        )\r\n    }else{\r\n        return (\r\n            <ListGroup.Item id='list-items'><p>#{i}</p><p>{name}</p>  <p>{bestScoreR}%</p></ListGroup.Item>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js",["63","64","65"],"import { SignIn} from \"./Scoreboard\";\r\nimport firebase from \"firebase\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\n\r\nexport function AccueilPage(){\r\n    return(\r\n\r\n        <div id='accueil' className='d' >\r\n            <div id='lg'/>\r\n            <SignIn/>\r\n\r\n        </div>\r\n    );\r\n}\r\n/*export function EnterName(){\r\n    const [FormValue, setFormValue] = useState('');\r\n    const auth = firebase.auth();\r\n    const [user] = useAuthState(auth);\r\n    const firestore = firebase.firestore();\r\n    const alert = useAlert();\r\n\r\n\r\n    const NameExist = () =>{\r\n        const userRef = firestore.collection('users');\r\n        let query = userRef.where(\"name\", \"==\", FormValue);\r\n        const [name] = useCollectionData(query, { idField: 'id' });\r\n        console.log(!name.empty);\r\n\r\n    }\r\n    const HandleSubmit = () => {\r\n\r\n        if(NameExist()){\r\n            alert.error(\"This name is already taken\");\r\n        }else {\r\n            alert.success(\"Welcome \" + FormValue + \" !\");\r\n        }\r\n        }\r\n\r\n\r\n    const HandleChangeName = async (e) => {\r\n        e.preventDefault();\r\n            await firestore.collection('users').doc(user.uid).set({\r\n                name:FormValue,bestScoreN:0,bestScoreR:0\r\n            })\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div id='accueil' >\r\n            <div id='lg'/>\r\n            <form id='form-accueil' onSubmit={HandleChangeName()}>\r\n                <input type='text'\r\n                       placeholder='Enter your name'\r\n                       value={FormValue}\r\n                       onChange={(e) => setFormValue(e.target.value)}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    );\r\n    if(NameExist !== 0){\r\n            alert.error(\"Name already taken !\");\r\n        }\r\n        else if(FormValue === \"\"){\r\n            alert.error(\"Enter a non empty name!\");\r\n        }else{\r\n            alert.success(\"Welcome \"+FormValue+\" !\")\r\n            await firestore.collection('users').doc(user.uid).set({\r\n                name:FormValue,bestScoreN:0,bestScoreR:0\r\n            })\r\n}*/\r\n\r\nexport function EnterName(){\r\n    const [FormValue, setFormValue] = useState('');\r\n    const auth = firebase.auth();\r\n    const [user] = useAuthState(auth);\r\n    const firestore = firebase.firestore();\r\n\r\n    const HandleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        await firestore.collection('users').doc(user.uid).set({\r\n            name:FormValue,bestScoreN:0,bestScoreR:0\r\n        })\r\n\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    return(\r\n        <div id='accueil' >\r\n            <div id='lg'/>\r\n            <form id='form-accueil' onSubmit={HandleSubmit}>\r\n                <input type='text'\r\n                       placeholder='Enter your name'\r\n                       value={FormValue}\r\n                       onChange={(e) => setFormValue(e.target.value)}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\jochi\\blend_the_colors\\src\\Tutorial.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\MakeAGuessHandle.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":7,"nodeType":"74","endLine":44,"endColumn":11},{"ruleId":"72","severity":1,"message":"75","line":44,"column":7,"nodeType":"74","endLine":44,"endColumn":11,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":69,"column":7,"nodeType":"74","endLine":69,"endColumn":9},{"ruleId":"72","severity":1,"message":"81","line":69,"column":7,"nodeType":"74","endLine":69,"endColumn":9,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":9,"nodeType":"74","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"83","severity":1,"message":"86","line":5,"column":9,"nodeType":"74","messageId":"85","endLine":5,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":6,"column":9,"nodeType":"74","messageId":"85","endLine":6,"endColumn":17},{"ruleId":"68","replacedBy":"88"},{"ruleId":"70","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["93"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useCollectionData' is defined but never used.","'useAlert' is defined but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [alert]",{"range":"98","text":"99"},"Update the dependencies array to be: [id]",{"range":"100","text":"101"},[1251,1255],"[alert]",[2117,2119],"[id]"]