[{"C:\\Users\\jochi\\blend_the_colors\\src\\index.js":"1","C:\\Users\\jochi\\blend_the_colors\\src\\App.js":"2","C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js":"3","C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js":"4","C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js":"5","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js":"6","C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js":"7","C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js":"8","C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js":"9","C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js":"10","C:\\Users\\jochi\\blend_the_colors\\src\\Tutorial.js":"11","C:\\Users\\jochi\\blend_the_colors\\src\\MakeAGuessHandle.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":2943,"mtime":1610374666415,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":6202,"mtime":1610369814066,"results":"17","hashOfConfig":"14"},{"size":713,"mtime":1609776810433,"results":"18","hashOfConfig":"14"},{"size":8150,"mtime":1610372631920,"results":"19","hashOfConfig":"14"},{"size":3244,"mtime":1610372064348,"results":"20","hashOfConfig":"14"},{"size":880,"mtime":1610372064367,"results":"21","hashOfConfig":"14"},{"size":4297,"mtime":1610373439768,"results":"22","hashOfConfig":"14"},{"size":3220,"mtime":1610376823777,"results":"23","hashOfConfig":"14"},{"size":2866,"mtime":1610155665455,"results":"24","hashOfConfig":"14"},{"size":4625,"mtime":1610370051048,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1pdqwah",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\jochi\\blend_the_colors\\src\\index.js",[],["53","54"],"C:\\Users\\jochi\\blend_the_colors\\src\\App.js",["55","56"],"C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js",["57"],"export function hslToRgb(h, s, l){\r\n    let r, g, b;\r\n    h=h/360;\r\n    s=s/100;\r\n    l=l/100;\r\n\r\n    if(s == 0){\r\n        r = g = b = l; // achromatic\r\n    }else{\r\n        let hue2rgb = function hue2rgb(p, q, t){\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n    return 'rgba('+r*255+','+g*255+','+b*255+',1)'}\r\n\r\n","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js",["58","59","60"],"import randomColor from \"randomcolor\";\r\nimport * as React from \"react\";\r\nimport ColorPicker from \"@radial-color-picker/react-color-picker\";\r\nimport {hslToRgb} from \"./hslToRgbf\";\r\nimport { useAlert} from \"react-alert\";\r\nimport '@radial-color-picker/react-color-picker/dist/react-color-picker.min.css';\r\nimport {get_colors, numAverage} from \"./Rounds\";\r\nimport {getResult, reverseRoundValid} from \"./BlendColors\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport firebase from \"firebase\";\r\nimport {ScoreBoard} from \"./Scoreboard\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {MakeAGuessHandle, RecapGame} from \"./MakeAGuessHandle\";\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nexport function ReverseMode(props){\r\n    const alert = useAlert();\r\n\r\n\r\n    const id = props.id;\r\n\r\n    const [_old,set_old] = useState(0);\r\n    const [user] = useAuthState(auth);\r\n\r\n    useEffect(() => {\r\n        document.getElementById('noname').appendChild(document.getElementById('logo'));\r\n    })\r\n\r\n    const [color, setColor] = React.useState({\r\n        hue: 90,\r\n        saturation: 100,\r\n        luminosity: 50,\r\n        alpha: 1,\r\n    });\r\n    const [backcolor, setBackcolor] = React.useState({\r\n        left:randomColor(),\r\n        right:randomColor()\r\n    });\r\n    const [colorToGuess, setColorToGuess] = React.useState({x:randomColor()});\r\n\r\n    const onInput = hue => {\r\n        setColor(prev => {\r\n            return {\r\n                ...prev,\r\n                hue,\r\n            };\r\n        });\r\n    };\r\n    const changeSaturation = (event) => {setColor\r\n    (prevState => {\r\n        return{\r\n            ...prevState,\r\n            saturation: event.target.value,\r\n        };\r\n    });\r\n    };\r\n    const changeLuminosity = (event) => {setColor\r\n    (prevState => {\r\n        return{\r\n            ...prevState,\r\n            luminosity: event.target.value,\r\n        };\r\n    });\r\n    };\r\n    const updateBackColor = () => {\r\n\r\n        if(right){\r\n            setBackcolor(prevState => {\r\n                return{\r\n                    ...prevState,\r\n                    right: hslToRgb(color.hue,color.saturation,color.luminosity),\r\n                };\r\n            });\r\n        }else{\r\n            setBackcolor(prevState => {\r\n                return{\r\n                    ...prevState,\r\n                    left: hslToRgb(color.hue,color.saturation,color.luminosity),\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    const [right, setRight] = React.useState(null);\r\n\r\n    const [arr, setArr] = React.useState([]);\r\n    const [histArr, setHistArr] = React.useState([]);\r\n\r\n    const [round ,setRound] = React.useState(1);\r\n\r\n    const add = (value,value2) =>{\r\n        setArr(arr.concat(value))\r\n        setHistArr(histArr.concat(value2))\r\n    }\r\n    const HandleClick = ()=>{\r\n        let c = get_colors(false);\r\n        let res = getResult(c[0],c[1],c[2])\r\n        if (reverseRoundValid(c[0],c[1])){\r\n            confirmAlert({\r\n                afterClose: () => {UpdateRound(res,c);},\r\n                customUI: ({ onClose }) => {\r\n                    return (\r\n                        <div className='custom-ui reverse'>\r\n                            <MakeAGuessHandle c0={c[0]} c1={c[1]} c2={c[2]} res={res} mode={false}/>\r\n                            <button\r\n                                id='mag-handler-btn' className='reverse'\r\n                                onClick={() => {\r\n                                    onClose();\r\n                                }}\r\n                            >\r\n                                Continue\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                }\r\n            });\r\n        }else{\r\n\r\n\r\n                alert.error(\"The colors you picked are too close!\");\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const UpdateRound = (res,c) => {\r\n\r\n        add(res,c);\r\n\r\n        setColorToGuess(prevState => {\r\n            return{\r\n                x: randomColor(),\r\n            };\r\n        });\r\n\r\n        if (round<=5){\r\n            setRound(round+1);\r\n        }\r\n    };\r\n    const getOld = async(e) => {await firestore.collection('users').doc(user.uid).get().then((doc) => {\r\n        set_old(doc.data()['bestScoreR']) ;\r\n    })}\r\n    const Handle0 = () => {firestore.collection('users').doc(user.uid).get().then((doc) => {\r\n        const addd = () => {\r\n            firestore.collection('users').doc(user.uid).update({\r\n                bestScoreR:numAverage(arr)\r\n            });\r\n        }\r\n        addd();\r\n    })};\r\n    const gameEnded = () => {\r\n\r\n        let _new = numAverage(arr);\r\n        getOld();\r\n        setRound(1);\r\n\r\n        let new_BC = _old < _new;\r\n        if(new_BC){Handle0();}\r\n\r\n        RecapGame(histArr,_new,false,new_BC);\r\n        setArr([]);\r\n        setHistArr([]);\r\n    }\r\n    useEffect(() => {\r\n        if(round > 5){\r\n            gameEnded();\r\n        }\r\n    })\r\n\r\n\r\n    //this line is to set noname as a child of cp to ignore the change of the colorpicker without rewriting all the code\r\n    useEffect(() => {\r\n        document.getElementById('cp').appendChild(document.getElementById('noname'));\r\n    })\r\n    //\r\n    return (\r\n        <>\r\n            {id ?  <ScoreBoard mode={false} id={id} /> : null}\r\n            <div  >\r\n                <div id='noname'  style={{backgroundColor:colorToGuess.x}} />\r\n            </div>\r\n            <button id='make-a-guess' className='false' onClick={HandleClick} > MAKE A GUESS </button>\r\n            <div id='p-conteneur'>\r\n                <p id='round-number' className='R'>ROUND : {round}/5  </p>\r\n                <p id='round-average' className='R'>ACCURACY : {numAverage(arr) || 0}  </p>\r\n            </div>\r\n\r\n            <div id='back'>\r\n                <div  style={{\r\n                    width:'50%',\r\n                    height:'100%',\r\n                    backgroundColor: backcolor.left\r\n                }}\r\n                 className={'leftb left'+right}\r\n                 onClick={async () => {if(right!==false) await setRight(false);}}\r\n                />\r\n\r\n                <div style={{\r\n                    width:'50%',\r\n                    height:'100%',\r\n                    backgroundColor: backcolor.right\r\n\r\n                }}\r\n                 className={'rightb right'+right}\r\n                 onClick={async () => {if(right!==true) await setRight(true);}}\r\n                />\r\n            </div>\r\n\r\n            <div id='color-picker'>\r\n\r\n                <ColorPicker {...color}\r\n                             onMouseMove={(e) => {if(e.buttons===1){updateBackColor()}}}\r\n                             onInput={onInput}\r\n\r\n                             id='cp' />\r\n\r\n                <div id='inputs'>\r\n                    <input type=\"range\" min='0' max='100' id='saturationInput'\r\n                           onChange={changeSaturation }\r\n\r\n                           onMouseMove={(e) => {if(e.buttons===1){updateBackColor()}}}\r\n                           style={{backgroundImage: 'linear-gradient(to right,'\r\n                                   +hslToRgb(color.hue,0,color.luminosity)+\r\n                                   ','+hslToRgb(color.hue,50,color.luminosity)+\r\n                                   ','+hslToRgb(color.hue,100,color.luminosity)+')'}}\r\n                    />\r\n\r\n                    <input type=\"range\" min='0' max='100' id='luminosityInput'\r\n                           onChange={changeLuminosity}\r\n                           onMouseMove={(e) => {if(e.buttons===1){updateBackColor()}}}\r\n\r\n                           style={{backgroundImage: 'linear-gradient(to right,'\r\n                                   +hslToRgb(color.hue,color.saturation,0)+\r\n                                   ','+hslToRgb(color.hue,color.saturation,50)+\r\n                                   ','+hslToRgb(color.hue,color.saturation,100)+')'}}/>\r\n                </div>\r\n            </div>\r\n            <div><div id='logo' className='R'/></div>\r\n\r\n        </>\r\n    );\r\n//here we put a div inside colorpicker to mask the color changing input without rewriting all the code\r\n\r\n}","C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js",["61","62"],"C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js",["63","64","65"],"C:\\Users\\jochi\\blend_the_colors\\src\\Tutorial.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\MakeAGuessHandle.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":44,"column":7,"nodeType":"72","endLine":44,"endColumn":11},{"ruleId":"70","severity":1,"message":"73","line":44,"column":7,"nodeType":"72","endLine":44,"endColumn":11,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":5,"column":30,"nodeType":"72","messageId":"81","endLine":5,"endColumn":38},{"ruleId":"79","severity":1,"message":"82","line":6,"column":8,"nodeType":"72","messageId":"81","endLine":6,"endColumn":21},{"ruleId":"79","severity":1,"message":"83","line":21,"column":11,"nodeType":"72","messageId":"81","endLine":21,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":69,"column":7,"nodeType":"72","endLine":69,"endColumn":9},{"ruleId":"70","severity":1,"message":"84","line":69,"column":7,"nodeType":"72","endLine":69,"endColumn":9,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"86","line":4,"column":9,"nodeType":"72","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":5,"column":9,"nodeType":"72","messageId":"81","endLine":5,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":6,"column":9,"nodeType":"72","messageId":"81","endLine":6,"endColumn":17},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Provider' is defined but never used.","unusedVar","'AlertTemplate' is defined but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["92"],"'useEffect' is defined but never used.","'useCollectionData' is defined but never used.","'useAlert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [alert]",{"range":"97","text":"98"},"Update the dependencies array to be: [id]",{"range":"99","text":"100"},[1251,1255],"[alert]",[2117,2119],"[id]"]