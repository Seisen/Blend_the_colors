[{"C:\\Users\\jochi\\blend_the_colors\\src\\index.js":"1","C:\\Users\\jochi\\blend_the_colors\\src\\App.js":"2","C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js":"3","C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js":"4","C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js":"5","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js":"6","C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js":"7","C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js":"8","C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js":"9","C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1766,"mtime":1610142990534,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":5025,"mtime":1610143158238,"results":"15","hashOfConfig":"12"},{"size":713,"mtime":1609776810433,"results":"16","hashOfConfig":"12"},{"size":6716,"mtime":1610148307822,"results":"17","hashOfConfig":"12"},{"size":3254,"mtime":1609775222427,"results":"18","hashOfConfig":"12"},{"size":878,"mtime":1609854071383,"results":"19","hashOfConfig":"12"},{"size":4722,"mtime":1610149021107,"results":"20","hashOfConfig":"12"},{"size":1257,"mtime":1609977374676,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pdqwah",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\jochi\\blend_the_colors\\src\\index.js",[],["45","46"],"C:\\Users\\jochi\\blend_the_colors\\src\\App.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\reportWebVitals.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\NormalMod.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\hslToRgbf.js",["47"],"export function hslToRgb(h, s, l){\r\n    let r, g, b;\r\n    h=h/360;\r\n    s=s/100;\r\n    l=l/100;\r\n\r\n    if(s == 0){\r\n        r = g = b = l; // achromatic\r\n    }else{\r\n        let hue2rgb = function hue2rgb(p, q, t){\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n    return 'rgba('+r*255+','+g*255+','+b*255+',1)'}\r\n\r\n","C:\\Users\\jochi\\blend_the_colors\\src\\ReverseMode.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\BlendColors.js",["48"],"import {rgbToHsv} from \"./hslToRgbf\";\r\n\r\n//credit https://gist.github.com/JordanDelcros/518396da1c13f75ee057\r\n// added regex func to convert rgba into list [r,g,b,a]\r\n// added function getResult that return the score\r\nfunction blendColors(color1,color2) {\r\n\r\n// Fast and easy way to combine (additive mode) two RGBA colors with JavaScript.\r\n// [red, green, blue, alpha] based on these maximul values [255, 255, 255, 1].\r\n    let base = rgbaToList(color1);\r\n    let added = rgbaToList(color2);\r\n\r\n    let mix = [];\r\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\r\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3]));\r\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3]));\r\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3]));\r\n\r\n    return mix\r\n}\r\n\r\nfunction rgbaToList(x){\r\n    let rgbRegex =  /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\r\n    return x.match(rgbRegex).slice(1).map(Number)\r\n}\r\n\r\n\r\n/*\r\n\r\n  based on the repo https://github.com/antimatter15/rgb-lab\r\n  The code is based on the 1994 version of DeltaE.\r\n\r\n  more information on this algorithm on http://zschuessler.github.io/DeltaE/learn/\r\n\r\n */\r\n\r\nfunction deltaE(rgbA, rgbB) {\r\n    let labA = rgb2lab(rgbA);\r\n    let labB = rgb2lab(rgbB);\r\n    let deltaL = labA[0] - labB[0];\r\n    let deltaA = labA[1] - labB[1];\r\n    let deltaB = labA[2] - labB[2];\r\n    let c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\r\n    let c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\r\n    let deltaC = c1 - c2;\r\n    let deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\r\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\r\n    let sc = 1.0 + 0.045 * c1;\r\n    let sh = 1.0 + 0.015 * c1;\r\n    let deltaLKlsl = deltaL / (1.0);\r\n    let deltaCkcsc = deltaC / (sc);\r\n    let deltaHkhsh = deltaH / (sh);\r\n    let i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\r\n    return i < 0 ? 0 : Math.sqrt(i);\r\n}\r\n\r\nfunction rgb2lab(rgb){\r\n    let r = rgb[0] / 255, g = rgb[1] / 255, b = rgb[2] / 255, x, y, z;\r\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\r\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\r\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\r\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\r\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\r\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\r\n    x = (x > 0.008856) ? Math.pow(x, 1/3) : (7.787 * x) + 16/116;\r\n    y = (y > 0.008856) ? Math.pow(y, 1/3) : (7.787 * y) + 16/116;\r\n    z = (z > 0.008856) ? Math.pow(z, 1/3) : (7.787 * z) + 16/116;\r\n    return [(116 * y) - 16, 500 * (x - y), 200 * (y - z)]\r\n}\r\n\r\nexport function getResult(color1,color2,color0){\r\n    /**\r\n     * @param {string}  color1 rgba\r\n     * @param {string} color2 rgba\r\n     * @param {string} colorMix rgba\r\n     */\r\n    let c1 = blendColors(color1,color2) ;\r\n    let c2 = rgbaToList(color0);\r\n    let delta = deltaE([c1[0],c1[1],c1[2]],[c2[0],c2[1],c2[2]])\r\n\r\n    //invert to get the score\r\n\r\n    let res = Math.abs(delta-100);\r\n\r\n    return res\r\n\r\n}","C:\\Users\\jochi\\blend_the_colors\\src\\Rounds.js",[],"C:\\Users\\jochi\\blend_the_colors\\src\\Scoreboard.js",["49","50","51","52","53"],"C:\\Users\\jochi\\blend_the_colors\\src\\AccueilPage.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":10,"nodeType":"60","messageId":"61","endLine":7,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":1,"column":9,"nodeType":"64","messageId":"65","endLine":1,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":22},{"ruleId":"62","severity":1,"message":"67","line":8,"column":9,"nodeType":"64","messageId":"65","endLine":8,"endColumn":18},{"ruleId":"62","severity":1,"message":"68","line":8,"column":28,"nodeType":"64","messageId":"65","endLine":8,"endColumn":32},{"ruleId":"69","severity":1,"message":"70","line":77,"column":7,"nodeType":"64","endLine":77,"endColumn":9},{"ruleId":"69","severity":1,"message":"71","line":77,"column":7,"nodeType":"64","endLine":77,"endColumn":9,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'rgbToHsv' is defined but never used.","Identifier","unusedVar","'useAuthState' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [id]",{"range":"78","text":"79"},[2504,2506],"[id]"]